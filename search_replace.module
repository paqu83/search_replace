<?php

/**
 * @file
 * Search and replace module.
 */

/**
 * Batch operation for batch replace.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function batch_search_replace($data, $operation_details, &$context) {

  $search_service = \Drupal::service('search_replace.search.string');

  foreach ($data['table'] as $item) {
    $entity_data = explode("::", $item);
    $entity_type = $entity_data[1];
    $entity_id = $entity_data[0];
    $entity_field = $entity_data[2];
    $entity_lang = $entity_data[3];

    $search_service->doTheReplace($entity_type, $entity_id, $entity_field, $entity_lang, $data['search_string'], $data['replace']);
    $context['results'][] = $entity_id;
  }

  // Optional message displayed under the progressbar.
  $context['message'] = t('Running Batch "@id" @details',
    ['@id' => empty($entity_id) ? '' : $entity_id, '@details' => $operation_details]
  );
}

/**
 * Batch 'finished' callback.
 */
function batch_search_replace_finished($success, $results, $operations) {
  $messenger = \Drupal::messenger();
  if ($success) {
    $messenger->addMessage(t('@count results processed.', ['@count' => count($results)]));
    $messenger->addMessage(t('The last processed entity ID was "%final"', ['%final' => end($results)]));
  }
  else {
    // An error occurred.
    // $operations contains the operations that remained unprocessed.
    $error_operation = reset($operations);
    $messenger->addMessage(
      t('An error occurred while processing @operation with arguments : @args',
        [
          '@operation' => $error_operation[0],
          '@args' => print_r($error_operation[0], TRUE),
        ]
      )
    );
  }
}

